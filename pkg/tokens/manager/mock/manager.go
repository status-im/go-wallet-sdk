// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/status-im/go-wallet-sdk/pkg/tokens/manager (interfaces: CustomTokenStore)
//
// Generated by this command:
//
//	mockgen -destination=mock/manager.go . CustomTokenStore
//

// Package mock_manager is a generated GoMock package.
package mock_manager

import (
	reflect "reflect"

	types "github.com/status-im/go-wallet-sdk/pkg/tokens/types"
	gomock "go.uber.org/mock/gomock"
)

// MockCustomTokenStore is a mock of CustomTokenStore interface.
type MockCustomTokenStore struct {
	ctrl     *gomock.Controller
	recorder *MockCustomTokenStoreMockRecorder
	isgomock struct{}
}

// MockCustomTokenStoreMockRecorder is the mock recorder for MockCustomTokenStore.
type MockCustomTokenStoreMockRecorder struct {
	mock *MockCustomTokenStore
}

// NewMockCustomTokenStore creates a new mock instance.
func NewMockCustomTokenStore(ctrl *gomock.Controller) *MockCustomTokenStore {
	mock := &MockCustomTokenStore{ctrl: ctrl}
	mock.recorder = &MockCustomTokenStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomTokenStore) EXPECT() *MockCustomTokenStoreMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockCustomTokenStore) GetAll() ([]*types.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]*types.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockCustomTokenStoreMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockCustomTokenStore)(nil).GetAll))
}
